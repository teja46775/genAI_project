{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let SubscriptionService = /*#__PURE__*/(() => {\n  class SubscriptionService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = environment.apiUrl;\n    }\n    getHeaders() {\n      const token = this.authService.getToken();\n      return new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n    }\n    getSubscriptions(filters) {\n      let params = new HttpParams();\n      if (filters?.status) {\n        params = params.set('status', filters.status);\n      }\n      if (filters?.planType) {\n        params = params.set('planType', filters.planType);\n      }\n      return this.http.get(`${this.apiUrl}/subscriptions`, {\n        headers: this.getHeaders(),\n        params\n      });\n    }\n    getSubscriptionById(id) {\n      return this.http.get(`${this.apiUrl}/subscriptions/${id}`, {\n        headers: this.getHeaders()\n      });\n    }\n    createSubscription(subscription) {\n      return this.http.post(`${this.apiUrl}/subscriptions`, subscription, {\n        headers: this.getHeaders()\n      });\n    }\n    updateSubscription(id, subscription) {\n      return this.http.put(`${this.apiUrl}/subscriptions/${id}`, subscription, {\n        headers: this.getHeaders()\n      });\n    }\n    deleteSubscription(id) {\n      return this.http.delete(`${this.apiUrl}/subscriptions/${id}`, {\n        headers: this.getHeaders()\n      });\n    }\n    static {\n      this.ɵfac = function SubscriptionService_Factory(t) {\n        return new (t || SubscriptionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: SubscriptionService,\n        factory: SubscriptionService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SubscriptionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}