{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/subscription.service\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction SubscriptionFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Plan name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Plan type is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Price is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_33_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Price must be greater than 0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, SubscriptionFormComponent_div_33_div_1_Template, 2, 0, \"div\", 40)(2, SubscriptionFormComponent_div_33_div_2_Template, 2, 0, \"div\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"price\"].errors == null ? null : ctx_r0.f[\"price\"].errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"price\"].errors == null ? null : ctx_r0.f[\"price\"].errors[\"min\"]);\n  }\n}\nfunction SubscriptionFormComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Status is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" Start date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" End date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" User ID is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubscriptionFormComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction SubscriptionFormComponent_span_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 42);\n  }\n}\nexport let SubscriptionFormComponent = /*#__PURE__*/(() => {\n  class SubscriptionFormComponent {\n    constructor(formBuilder, subscriptionService, authService, router, route) {\n      this.formBuilder = formBuilder;\n      this.subscriptionService = subscriptionService;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.loading = false;\n      this.error = '';\n      this.isEditMode = false;\n      this.subscriptionId = null;\n      this.subscriptionForm = this.formBuilder.group({\n        userId: [1, Validators.required],\n        planName: ['', Validators.required],\n        planType: ['', Validators.required],\n        price: ['', [Validators.required, Validators.min(0)]],\n        status: ['', Validators.required],\n        startDate: ['', Validators.required],\n        endDate: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.subscriptionId = this.route.snapshot.params['id'];\n      this.isEditMode = !!this.subscriptionId;\n      if (this.isEditMode) {\n        this.loadSubscription();\n      }\n      // Set default start date to today\n      const today = new Date().toISOString().split('T')[0];\n      this.subscriptionForm.patchValue({\n        startDate: today\n      });\n    }\n    get f() {\n      return this.subscriptionForm.controls;\n    }\n    loadSubscription() {\n      if (this.subscriptionId) {\n        this.subscriptionService.getSubscriptionById(this.subscriptionId).subscribe({\n          next: subscription => {\n            this.subscriptionForm.patchValue({\n              userId: subscription.user_id,\n              planName: subscription.plan_name,\n              planType: subscription.plan_type,\n              price: subscription.price,\n              status: subscription.status,\n              startDate: subscription.start_date,\n              endDate: subscription.end_date\n            });\n          },\n          error: error => {\n            this.error = 'Failed to load subscription';\n            console.error('Error loading subscription:', error);\n          }\n        });\n      }\n    }\n    onSubmit() {\n      if (this.subscriptionForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.error = '';\n      const formData = this.subscriptionForm.value;\n      if (this.isEditMode && this.subscriptionId) {\n        this.subscriptionService.updateSubscription(this.subscriptionId, formData).subscribe({\n          next: () => {\n            this.router.navigate(['/subscriptions']);\n          },\n          error: error => {\n            this.error = error.error?.error || 'Failed to update subscription';\n            this.loading = false;\n          }\n        });\n      } else {\n        this.subscriptionService.createSubscription(formData).subscribe({\n          next: () => {\n            this.router.navigate(['/subscriptions']);\n          },\n          error: error => {\n            this.error = error.error?.error || 'Failed to create subscription';\n            this.loading = false;\n          }\n        });\n      }\n    }\n    cancel() {\n      this.router.navigate(['/subscriptions']);\n    }\n    static {\n      this.ɵfac = function SubscriptionFormComponent_Factory(t) {\n        return new (t || SubscriptionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SubscriptionService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SubscriptionFormComponent,\n        selectors: [[\"app-subscription-form\"]],\n        decls: 72,\n        vars: 27,\n        consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"planName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"planName\", \"formControlName\", \"planName\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"planType\", 1, \"form-label\"], [\"id\", \"planType\", \"formControlName\", \"planType\", 1, \"form-select\"], [\"value\", \"\"], [\"value\", \"basic\"], [\"value\", \"premium\"], [\"value\", \"enterprise\"], [\"for\", \"price\", 1, \"form-label\"], [\"type\", \"number\", \"step\", \"0.01\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"active\"], [\"value\", \"inactive\"], [\"value\", \"cancelled\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"endDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"endDate\", \"formControlName\", \"endDate\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"userId\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"userId\", \"formControlName\", \"userId\", 1, \"form-control\"], [1, \"form-text\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-end\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n        template: function SubscriptionFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n            i0.ɵɵlistener(\"ngSubmit\", function SubscriptionFormComponent_Template_form_ngSubmit_8_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"label\", 10);\n            i0.ɵɵtext(12, \"Plan Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 11);\n            i0.ɵɵtemplate(14, SubscriptionFormComponent_div_14_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 13);\n            i0.ɵɵtext(17, \"Plan Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"select\", 14)(19, \"option\", 15);\n            i0.ɵɵtext(20, \"Select Plan Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"option\", 16);\n            i0.ɵɵtext(22, \"Basic\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"option\", 17);\n            i0.ɵɵtext(24, \"Premium\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"option\", 18);\n            i0.ɵɵtext(26, \"Enterprise\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(27, SubscriptionFormComponent_div_27_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(28, \"div\", 8)(29, \"div\", 9)(30, \"label\", 19);\n            i0.ɵɵtext(31, \"Price ($)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(32, \"input\", 20);\n            i0.ɵɵtemplate(33, SubscriptionFormComponent_div_33_Template, 3, 2, \"div\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"div\", 9)(35, \"label\", 21);\n            i0.ɵɵtext(36, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"select\", 22)(38, \"option\", 15);\n            i0.ɵɵtext(39, \"Select Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(40, \"option\", 23);\n            i0.ɵɵtext(41, \"Active\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(42, \"option\", 24);\n            i0.ɵɵtext(43, \"Inactive\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"option\", 25);\n            i0.ɵɵtext(45, \"Cancelled\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(46, SubscriptionFormComponent_div_46_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(47, \"div\", 8)(48, \"div\", 9)(49, \"label\", 26);\n            i0.ɵɵtext(50, \"Start Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(51, \"input\", 27);\n            i0.ɵɵtemplate(52, SubscriptionFormComponent_div_52_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(53, \"div\", 9)(54, \"label\", 28);\n            i0.ɵɵtext(55, \"End Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(56, \"input\", 29);\n            i0.ɵɵtemplate(57, SubscriptionFormComponent_div_57_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(58, \"div\", 30)(59, \"label\", 31);\n            i0.ɵɵtext(60, \"User ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(61, \"input\", 32);\n            i0.ɵɵtemplate(62, SubscriptionFormComponent_div_62_Template, 2, 0, \"div\", 12);\n            i0.ɵɵelementStart(63, \"div\", 33);\n            i0.ɵɵtext(64, \"Enter the user ID for this subscription\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(65, SubscriptionFormComponent_div_65_Template, 2, 1, \"div\", 34);\n            i0.ɵɵelementStart(66, \"div\", 35)(67, \"button\", 36);\n            i0.ɵɵlistener(\"click\", function SubscriptionFormComponent_Template_button_click_67_listener() {\n              return ctx.cancel();\n            });\n            i0.ɵɵtext(68, \" Cancel \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(69, \"button\", 37);\n            i0.ɵɵtemplate(70, SubscriptionFormComponent_span_70_Template, 1, 0, \"span\", 38);\n            i0.ɵɵtext(71);\n            i0.ɵɵelementEnd()()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Edit\" : \"Create\", \" Subscription\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.subscriptionForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"planName\"].invalid && ctx.f[\"planName\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"planName\"].invalid && ctx.f[\"planName\"].touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"planType\"].invalid && ctx.f[\"planType\"].touched);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"planType\"].invalid && ctx.f[\"planType\"].touched);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"price\"].invalid && ctx.f[\"price\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"price\"].invalid && ctx.f[\"price\"].touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"status\"].invalid && ctx.f[\"status\"].touched);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"status\"].invalid && ctx.f[\"status\"].touched);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"startDate\"].invalid && ctx.f[\"startDate\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"startDate\"].invalid && ctx.f[\"startDate\"].touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"endDate\"].invalid && ctx.f[\"endDate\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"endDate\"].invalid && ctx.f[\"endDate\"].touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"userId\"].invalid && ctx.f[\"userId\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"userId\"].invalid && ctx.f[\"userId\"].touched);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.subscriptionForm.invalid);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? ctx.isEditMode ? \"Updating...\" : \"Creating...\" : ctx.isEditMode ? \"Update\" : \"Create\", \" \");\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".card[_ngcontent-%COMP%]{box-shadow:0 .5rem 1rem #00000026}.gap-2[_ngcontent-%COMP%]{gap:.5rem}\"]\n      });\n    }\n  }\n  return SubscriptionFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}