{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 20)(2, LoginComponent_div_13_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors == null ? null : ctx_r0.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors == null ? null : ctx_r0.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction LoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 22);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, authService, router) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.router = router;\n      this.loading = false;\n      this.error = '';\n      this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      if (this.authService.isAuthenticated()) {\n        this.router.navigate(['/dashboard']);\n      }\n    }\n    get f() {\n      return this.loginForm.controls;\n    }\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.error = '';\n      this.authService.login(this.loginForm.value).subscribe({\n        next: () => {\n          this.router.navigate(['/dashboard']);\n        },\n        error: error => {\n          this.error = error.error?.error || 'Login failed';\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 28,\n        vars: 11,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", 4, \"ngIf\"], [1, \"text-center\", \"mt-3\"], [\"routerLink\", \"/register\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n            i0.ɵɵtext(6, \"Login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n            i0.ɵɵtext(11, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 10);\n            i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n            i0.ɵɵtext(16, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"input\", 13);\n            i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 14);\n            i0.ɵɵelementStart(20, \"button\", 15);\n            i0.ɵɵtemplate(21, LoginComponent_span_21_Template, 1, 0, \"span\", 16);\n            i0.ɵɵtext(22);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"div\", 17)(24, \"p\");\n            i0.ɵɵtext(25, \"Don't have an account? \");\n            i0.ɵɵelementStart(26, \"a\", 18);\n            i0.ɵɵtext(27, \"Register here\");\n            i0.ɵɵelementEnd()()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"email\"].invalid && ctx.f[\"email\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"email\"].invalid && ctx.f[\"email\"].touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵclassProp(\"is-invalid\", ctx.f[\"password\"].invalid && ctx.f[\"password\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.f[\"password\"].invalid && ctx.f[\"password\"].touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.loginForm.invalid);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Logging in...\" : \"Login\", \" \");\n          }\n        },\n        dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".card[_ngcontent-%COMP%]{box-shadow:0 .5rem 1rem #00000026}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}